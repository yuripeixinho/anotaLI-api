// <auto-generated />
using System;
using AL.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AL.Data.Migrations
{
    [DbContext(typeof(ALContext))]
    [Migration("20241015001614_popularBase")]
    partial class popularBase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AL.Core.Domain.Categoria", b =>
                {
                    b.Property<int>("CategoriaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaID"));

                    b.Property<int?>("ContaID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("CategoriaID");

                    b.HasIndex("ContaID");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            CategoriaID = 1,
                            Nome = "Frutas"
                        },
                        new
                        {
                            CategoriaID = 2,
                            Nome = "Verduras e Legumes"
                        },
                        new
                        {
                            CategoriaID = 3,
                            Nome = "Grãos e Cereais"
                        },
                        new
                        {
                            CategoriaID = 4,
                            Nome = "Laticínios"
                        },
                        new
                        {
                            CategoriaID = 5,
                            Nome = "Carnes e Peixes"
                        },
                        new
                        {
                            CategoriaID = 6,
                            Nome = "Bebidas"
                        },
                        new
                        {
                            CategoriaID = 7,
                            Nome = "Produtos de Limpeza"
                        },
                        new
                        {
                            CategoriaID = 8,
                            Nome = "Alimentos Enlatados"
                        },
                        new
                        {
                            CategoriaID = 9,
                            Nome = "Doces e Sobremesas"
                        },
                        new
                        {
                            CategoriaID = 10,
                            Nome = "Pães e Massas"
                        },
                        new
                        {
                            CategoriaID = 11,
                            Nome = "Especiarias e Temperos"
                        },
                        new
                        {
                            CategoriaID = 12,
                            Nome = "Produtos Congelados"
                        },
                        new
                        {
                            CategoriaID = 13,
                            Nome = "Snacks e Petiscos"
                        },
                        new
                        {
                            CategoriaID = 14,
                            Nome = "Condimentos"
                        },
                        new
                        {
                            CategoriaID = 15,
                            Nome = "Frutos Secos e Sementes"
                        });
                });

            modelBuilder.Entity("AL.Core.Domain.Conta", b =>
                {
                    b.Property<int>("ContaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContaID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("ContaID");

                    b.ToTable("Contas");

                    b.HasData(
                        new
                        {
                            ContaID = 1,
                            Email = "yuri@gmail.com",
                            Senha = "senha123"
                        },
                        new
                        {
                            ContaID = 2,
                            Email = "marcelo@gmail.com",
                            Senha = "senha456"
                        });
                });

            modelBuilder.Entity("AL.Core.Domain.DimPeriodoFeira", b =>
                {
                    b.Property<int>("DimPeriodoFeiraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DimPeriodoFeiraID"));

                    b.Property<string>("Periodo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("DimPeriodoFeiraID");

                    b.ToTable("DimPeriodoFeiras");

                    b.HasData(
                        new
                        {
                            DimPeriodoFeiraID = 1,
                            Periodo = "Diária"
                        },
                        new
                        {
                            DimPeriodoFeiraID = 2,
                            Periodo = "Semanal"
                        },
                        new
                        {
                            DimPeriodoFeiraID = 3,
                            Periodo = "Quinzenal"
                        },
                        new
                        {
                            DimPeriodoFeiraID = 4,
                            Periodo = "Mensal"
                        });
                });

            modelBuilder.Entity("AL.Core.Domain.PerfilConta", b =>
                {
                    b.Property<int>("PerfilContaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PerfilContaID"));

                    b.Property<int>("ContaID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("PerfilContaID");

                    b.HasIndex("ContaID");

                    b.ToTable("PerfilContas");

                    b.HasData(
                        new
                        {
                            PerfilContaID = 1,
                            ContaID = 1,
                            Nome = "Yago"
                        },
                        new
                        {
                            PerfilContaID = 2,
                            ContaID = 1,
                            Nome = "Yuri"
                        },
                        new
                        {
                            PerfilContaID = 3,
                            ContaID = 2,
                            Nome = "Marcelo"
                        },
                        new
                        {
                            PerfilContaID = 4,
                            ContaID = 2,
                            Nome = "Gislene"
                        },
                        new
                        {
                            PerfilContaID = 5,
                            ContaID = 2,
                            Nome = "Lucas"
                        });
                });

            modelBuilder.Entity("AL.Core.Domain.Produto", b =>
                {
                    b.Property<int>("ProdutoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProdutoID"));

                    b.Property<int>("CategoriaID")
                        .HasColumnType("int");

                    b.Property<int>("DimPeriodoFeiraID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("PerfilContaID")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<string>("Unidade")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProdutoID");

                    b.HasIndex("CategoriaID");

                    b.HasIndex("DimPeriodoFeiraID");

                    b.HasIndex("PerfilContaID");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            ProdutoID = 1,
                            CategoriaID = 4,
                            DimPeriodoFeiraID = 2,
                            Nome = "Leite",
                            PerfilContaID = 1,
                            Quantidade = 1,
                            Unidade = "un"
                        },
                        new
                        {
                            ProdutoID = 2,
                            CategoriaID = 9,
                            DimPeriodoFeiraID = 3,
                            Nome = "Cacau",
                            PerfilContaID = 2,
                            Quantidade = 3,
                            Unidade = "un"
                        },
                        new
                        {
                            ProdutoID = 3,
                            CategoriaID = 3,
                            DimPeriodoFeiraID = 4,
                            Nome = "Feijão",
                            PerfilContaID = 4,
                            Quantidade = 5,
                            Unidade = "un"
                        },
                        new
                        {
                            ProdutoID = 5,
                            CategoriaID = 3,
                            DimPeriodoFeiraID = 4,
                            Nome = "Arroz",
                            PerfilContaID = 5,
                            Quantidade = 3,
                            Unidade = "un"
                        },
                        new
                        {
                            ProdutoID = 6,
                            CategoriaID = 10,
                            DimPeriodoFeiraID = 1,
                            Nome = "Macarrão",
                            PerfilContaID = 5,
                            Quantidade = 8,
                            Unidade = "un"
                        },
                        new
                        {
                            ProdutoID = 7,
                            CategoriaID = 7,
                            DimPeriodoFeiraID = 4,
                            Nome = "Desinfetante",
                            PerfilContaID = 3,
                            Quantidade = 1,
                            Unidade = "un"
                        });
                });

            modelBuilder.Entity("AL.Core.Domain.Categoria", b =>
                {
                    b.HasOne("AL.Core.Domain.Conta", "Conta")
                        .WithMany("Categorias")
                        .HasForeignKey("ContaID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Conta");
                });

            modelBuilder.Entity("AL.Core.Domain.PerfilConta", b =>
                {
                    b.HasOne("AL.Core.Domain.Conta", "Conta")
                        .WithMany("PerfilContas")
                        .HasForeignKey("ContaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conta");
                });

            modelBuilder.Entity("AL.Core.Domain.Produto", b =>
                {
                    b.HasOne("AL.Core.Domain.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AL.Core.Domain.DimPeriodoFeira", "DimPeriodoFeira")
                        .WithMany()
                        .HasForeignKey("DimPeriodoFeiraID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AL.Core.Domain.PerfilConta", "PerfilConta")
                        .WithMany("Produtos")
                        .HasForeignKey("PerfilContaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("DimPeriodoFeira");

                    b.Navigation("PerfilConta");
                });

            modelBuilder.Entity("AL.Core.Domain.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("AL.Core.Domain.Conta", b =>
                {
                    b.Navigation("Categorias");

                    b.Navigation("PerfilContas");
                });

            modelBuilder.Entity("AL.Core.Domain.PerfilConta", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
